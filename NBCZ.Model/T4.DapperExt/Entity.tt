<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="$(SolutionDir)\NBCZ.DBUtility\DbHelper\OutputHelper.ttinclude" #>
<#@ include file="$(SolutionDir)\NBCZ.DBUtility\DbHelper\DbEntity.ttinclude"  #>
<#
var manager = Manager.Create(Host, GenerationEnvironment);
var dbHelper=DbFactory.CreatDb(Config.DbType);
var dtList= dbHelper.GetDbTables();
foreach(DbTable dbTable in dtList)
{   
	string tableName=dbTable.TableName;
	var dbColList=dbHelper.GetDbColumns(tableName,"dbo");
   var primaryKey=dbColList.FirstOrDefault(p=>p.IsPrimaryKey);
	manager.StartNewFile(""+tableName+".cs");#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失
//     作者：Harbour CTS
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using DapperExtensions.Mapper;
using Dapper.Contrib.Extensions;
using Newtonsoft.Json;

namespace <#=Config.Namespace#>.Model
{	
    <#
      if(primaryKey==null||primaryKey.CSharpType=="int"||primaryKey.CSharpType=="long")
     {#>
[Table("<#=tableName#>")]
[JsonObject(MemberSerialization.OptIn)]

    public sealed partial class <#=tableName#>
    {
     <#}
     else
    {#>
[Table("<#=tableName#>")]
    [JsonObject(MemberSerialization.OptIn)]
    public sealed partial class <#=tableName#>//:BaseEntity<<#=tableName#>> //使用Dapper.Contrib无需继承
    {
        public <#=tableName#>()
        {
          //varchar主键 报错At least one Key column must be defined.
		  //使用Dapper.Contrib无需Map、AutoMap
          //Map(x => x.<#=primaryKey.ColumnName#>).Key(KeyType.Assigned);
          //AutoMap();
        }
    <#}#>
		<# foreach(DbColumn column in dbColList){#>
 /// <summary>
     	/// <#=column.Remark#>
     	/// </summary>
		 <#if(primaryKey!=null&&column.ColumnName==primaryKey.ColumnName){#>
[ExplicitKey]
		 <#}#>
[JsonProperty]	
		public <#= column.IsNullCSharpType#> <#=column.ColumnName#> { get; set; }

		<#}#>   
    }
}

<#

manager.EndBlock();   
} 
manager.Process(true);  
#>




